name: Build and deploy
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:

  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          password: ${{ secrets.CR_PAT }}
          username: ${{ github.repository_owner }}

      - name: Declare some variables
        id: vars
        shell: bash
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          file: ./Dockerfile
          tags: ghcr.io/${{ github.repository }}:${{ steps.vars.outputs.VERSION }}



  deploy-on-prod:
    needs: [ build-image ]
    runs-on: ubuntu-latest
    steps:

      - name: Declare some variables
        id: vars
        shell: bash
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Run ssh command (PROD-SERVER)
        uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.PROD_SSH_PRIVATE_KEY }}
          port: ${{ secrets.PROD_PORT }}
          host: ${{ secrets.PROD_HOST }}
          script: |
            cd ${{ secrets.PROD_DIRECTORY }}
            sudo make pull-image-from-registry URL=ghcr.io USERNAME=${{ github.repository_owner }} PASSWORD=${{ secrets.CR_PAT }} IMAGE=ghcr.io/${{ github.repository }} VERSION=${{ steps.vars.outputs.VERSION }}
            sudo make set-image-version VERSION=${{ steps.vars.outputs.VERSION }}
            sudo make start-from-image
          username: ${{ secrets.PROD_USER }}


